数据库的分类
	层次数据库
	网状数据库
	关系数据库
SQL:这是关系数据库的"语言标准",STRUCT QUERY LANGUAGE(结构化查询语言)。
关系数据库的特点：表跟表之间的数据可以建立一定的"对应关系"。

mysql数据库的基本概念
数据data
数据库database:用于存储一个项目/产品/软件所使用的各种数据的一个逻辑单位。
数据库管理系统dbms：其实就是指一个具体的数据库软件产品
表(数据表)table:用于存储一种数据"结构形式",基本就是"行列对齐"的"外观样子"
字段field,列column：一个数据表中的一个纵列,其有一个名字,又叫字段
行row,记录record

数据存储的"表现"
	我们通过代码(语句),可以对各种数据进行各种操作,但其实,在文件表现,其实只是几个文件名
	而已,具体在数据库的存储目录中:
	1、每个数据库,会对应一个文件夹,
	2、每个数据库表,会对应一个或几个文件夹
		数据库 .opt 表 .frm
	特别注意：这只是演示,我们的数据库的各种操作,可能文件夹有所反应;但是绝不要手工对这些文件操作
php/mysql命令行  ----------数据库系统-----------数据库数据集合(文件)

mysql 数据库的系统级操作及语法规定操作
	启动/停止mysql数据库服务
		命令行模式(需要管理员身份)
		启动 net start mysql
		停止 net stop mysql/apache
	服务模式：
		控制面板》管理工具》服务》启动/停止
	登陆退出mysql系统
		mysql/mysql.exe -h服务器地址 -u登陆名 【-P端口号】 -p
		mysql/mysql.exe --host=服务器地址 --user=登陆名 --port=端口号 --password
		两个语法,可以使用前提：设置好环境变量
	退出
		quit;exit;\q
	
	注意：登陆数据库系统后，需要使用"set names 编码名"
		来设定当前连接数据库的"环境编码名",即当前跟数据库
		打交道的"客户端"本身的编码。通常来说,
		cmd客户端是固定GBK编码,它只能是set names gbk
		而php网页中,是该网页文件的编码(现在主流都是utf8)
		
	数据库的备份和恢复
	备份：就是将一个数据库,完整地"转换为"一个可以随时携带和传送的文件
	语法：
		mysqldump -h服务器地址 -u登陆名 -p  数据库名>(路径)文件名
	恢复：就是将一个备份数据库,完整地还原一个可以使用的数据库
	语法：
		mysql -h服务器地址 -u登陆名 -p 数据库名 < (路径)文件名
	注意：
		这两个命令,都是在"没有登陆进入"的时候使用
		其中mysqldump 必须是管理员身份
		通常恢复就是指恢复原来所有表数据信息，而数据库名
		可以是新的名字。
		
基础语法规定
	注释：
		1、单行注释： #注释内容
		2、单行注释： -- 注释内容(注意：--后面有一个空格)
		3、多行注释   /*注释内容*/
		4、注释的反注释/*!40100 */
	语句行：
		默认情况下以一个英文分号作为一条语句的结束！
		而且,常规的操作中,都是"一次执行一条语句"；
		但是mysql可以认为设定语句结束符,做法如下：
		delimiter 新的结束符
		此行之后就可以使用新的结束符了。
		
	大小写问题
		1、mysql 语言内部不区分大小写
		2、但,mysql的某些命令执行会生成文件(夹),此时他们就可能区分大小写：
			2.1：在文件(夹)名称区分大小写的系统中,这些名字也会区分，比如unix linux系统，
			2.2：在文件(夹)名称不区分大小写的系统中,他们同样不区分大小写，比如windows系统。
	命名问题 这个``符号
	
数据库定义语句
	创建数据库
		形式：create database 数据库名 [charset 字符编码] [collate 排序规则]
		说明
			1、字符编码名称是用于设定当前数据库中存储的字符以什么编码来存储.
			2、collate排序规则用于设定其中的字符内容的"大小关系"(先后顺序):
			对于英文,基本没有任何问题，比如：
				"abc" "abd" ：后者大;
				"d"，"abc": 前者大;
				所有的对于英文字符的比较,本质上都是"单个字符"的比较。
			但,对于中文就有问题,比如：
				"中国" , "印度" ：谁大？
				"中", "美" ： 谁大？
			排序规则：就是用于设定类似这种字符的大小关系或先后顺序的一种规定！
				实际我们的代码中(应用级别),只是一个名字:排序规则名
				而且,通常每种字符编码(字符集),都有一个默认的排序规则,所以，通常都不写的
			显示排序规则show collation; show charset;
		
	删除数据库
		drop database [if exists] 数据库
	修改数据库(字符编码)
		基本上,就是修改数据库的"属性"而已:只有2个：
		修改编码
		修改排序规则
		alter databases 数据库名 charset 新的编码名 collate 新的排序规则名
	显示所有数据库
		show databases;
	显示一个数据库的创建语句
		show create database 数据库名;
	进入选择某个数据库
		use 数据库名;

字段类型(数据类型)
总览
	mysql中,数据类型主要分3大类：数字型,字符型,时间型；
	数据类型，在mysql中；主要用于创建一个表的时候,设定字段类型
	
整数类型
	主要有
		int tinyint smallint mediumint bigint
	整数类型所占空间
		int：占4个字节,即32位
		tinyint	占1个字节,即8位;最多能存储256个数字,默认范围是-128~127 无符号0~255
		bigint	占8个字节,即64位
	整数类型字段的设置类型
		类型名[(M)]	[unsigned] [zerofill]
	说明：
		1、M表示设定该整数的'显示长度'即select输出的时候,123可能显示000123(假设M为6)
		2、unsigned 该整数无符号，就是没有负数
		3、zerofill用于设定是否填充"0"到一个数字的左边,此时，需要与设定的长度M配合使用。
			使用zerofill说明是无符号整数 如果不指定m那么自动补其到这个类型的最大位。

小数类型
	有3种float double decimal
	float 单精度浮点型,使用4个字节存储数据,其精度大约只有6-7个有效数字位数(总位数)
	double/real 双精度浮点型，使用8个字节存储数据，其精度大约只有20个有效数字位数
	decimal() 定点小数类型 整数最大65位,小数最长30位。一般设置格式为:decimal(总位数95,小数位)
			create table tab_xiaoshu(
				f1 float,
				f2 double,
				f3 decimal(10,3)/*表示总位数为10,小树位为3*/
			);
		insert into tab_xiaoshu values(123.456,123.456,123.456);
		insert into tab_xiaoshu values(123.456789,123.456789,123.456789);
		即使整数都损失
		
php 操作mysql数据库基本函数复习
	$link=@mysql_connect('数据库服务器地址','用户名' ,'密码');//链接数据库
	mysql_query("set names 编码");//设定链接编码 网页一般是utf8
									mysql_set_charset("网页文件编码");.
	mysql_query("use 数据库名");//选择要使用的数据库
									mysql_select_db("数据库名");								
	$result=mysql_query("select * from / 什么数据库语句都能用");
	mysql_error();执行失败时的错误信息。
		
	对于mysql_query()这个函数,可以执行几乎任何sql语句 分2种情况
	1、执行没有数据的语句，如 insert ,update ,delete ,create table,create database,drop...
		返回只有true false
	2、执行有数据返回的语句,如 select ,show ,desc 等等
		如果失败返回false
		如果成功返回结果集
			$result=mysql_query("select....");
			while($rec=mysql_fetch_array($result)){
				//mysql_fetch_array($result)//集中显示一行记录
				echo $rec['字段名1'];
				echo $rec['字段名2'];
				echo $rec['字段名3'];
			}
	fetch函数的三种形式
		mysql_fetch_assoc()//关联数组 字段
		mysql_fetch_row()//索引数组
		mysql_fetch_array()//关联+索引
		mysql_fetch_object()
	
	扩展php中操作mysql数据的几个函数
		$n1=mysql_num_rows(结果集)//行
		$n2=mysql_num_fields(结果集)//列
		mysql_field_name(结果集,$i)//获取结果集的第i个字段的名字 i 从0开始
			
字段类型
	mysql 使用单引号
	字符类型	
		varchar类型
			可变长度字符串,使用时我们必须设定其长度,最大长度"理论值"65535,实际其实最大值
			只能是65533,但考虑到存储的字符编码不同,也会进一步减少,比如：
			如果存储中文gbk，则最多是65533/2个；
			如果存储中文utf8，则最多是65533/2个；
			此类型的实际长度实存储内容绝定，而设定值只是表示最多可存储的
			注意：这里的存储限制，其实都是来源于一个表格的"一行"的数据存储最大容量限制65535。
		char类型
			定长字符串,使用时通常需要设定其长度 ,如果不设定，默认是1，最大理论长度255个。
			定长字符串使用于存储的数据都是可预见明确的固定长度字符，比如手机号，邮政编码
			实际存储的时候，如果少于设定长度，也能存，但都会补空格填满
		enum类型
			单选项字符串数据类型，它非常适合于存储表单界面中的"单选项值"
			它设定的时候，需要给定"固定几个选项",然后存储的时候,就只存储其中一个值
			形式如下:
				enum("选项1","选项2","选项3",....);
			实际内部：
				这些字符串选项值对应得是如下数字值：1，2，3，4，5...最多65535个选项
			写入数据形式
				可以用该选项字符串本身,也可以用对应的数字
		set 类型
			多选项字符串数据类型，它非常适合于存储表单界面中的"多选项值"
			它设定的时候，需要给定"固定几个选项",然后存储的时候,就只存储其中若干个值
			形式如下:
				set("选项1","选项2","选项3",....);
			实际内部：
				这些字符串选项值对应得是如下数字值：1，2，4，8...最多64个选项	
			写入数据形式
				可以用该选项字符串并用逗号分开本身,也可以用对应的数字的和:
		text类型
			它成为"长文本"字符类型。通常,其中存储的数据不占据表格中的数据容量限制.其本身最长可存储65535个字符。
			其他同类字符型：smalltext,tinytext,longtext
		其他(了解)
		binary类型：定长二进制字符串类型,里面存储的是二进制值;
		varbinary类型:变长二进制字符串类型,里面存储的是二进制值；
		blob类型：二进制数据类型，存的仍然是二进制值,但其使用于存储"图片","其他文件"等但极少用!
		
		时间类型
			datetime类型
				时间日期类型
			date类型
				日期类型
			time类型
				时间类型
			year类型
				年份类型
			timestamp
				时间戳类型,就是指一个时间的"数据值"--本质其实一个数字,类似js中的GetTime(),或php中是Time(),
				他们都得到的是一个"整数数字"
				它的一个重要作用是:他会自动获得时间戳的数据值--相当于"now()"。
		在应用中,时间日期类型、在我们自己给定的数据情况下,需要使用"单引号"引起来,跟字符串一样